main.v1publiccomics{comicId}.getComicIndividual&200&data&results&characters&items(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&characters&items(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&characters&items(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&creators&items(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&creators&items(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&creators&items(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&dates(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&dates(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&dates(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&images(main.getComicIndividual&Input):::EXIT;return.extension == "jpg";daikon.inv.unary.string.OneOfString;(return.extension)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;return.type one of { "digitalPurchasePrice", "printPrice" };daikon.inv.unary.string.OneOfString;(return.type)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&prices(main.getComicIndividual&Input):::EXIT;return.price >= 0.0;daikon.inv.unary.scalar.LowerBoundFloat;(return.price)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&stories&items(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&stories&items(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&stories&items(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;return.type one of { "70th_winner_desc", "issue_preview_text", "issue_solicit_text" };daikon.inv.unary.string.OneOfString;(return.type)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&textObjects(main.getComicIndividual&Input):::EXIT;return.language == "en-us";daikon.inv.unary.string.OneOfString;(return.language)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&urls(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&urls(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&urls(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&variants(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&variants(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results&variants(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId == return.id;daikon.inv.binary.twoScalar.IntEqual;(input.comicId, return.id)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned == size(return.creators.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.creators.returned, size(return.creators.items[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available == return.characters.returned;daikon.inv.binary.twoScalar.IntEqual;(return.characters.available, return.characters.returned)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available == size(return.characters.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.characters.available, size(return.characters.items[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available == return.stories.returned;daikon.inv.binary.twoScalar.IntEqual;(return.stories.available, return.stories.returned)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available == size(return.stories.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.stories.available, size(return.stories.items[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available == return.events.returned;daikon.inv.binary.twoScalar.IntEqual;(return.events.available, return.events.returned)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available == size(return.collectedIssues[]);daikon.inv.binary.twoScalar.IntEqual;(return.events.available, size(return.collectedIssues[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available == size(return.events.items[]);daikon.inv.binary.twoScalar.IntEqual;(return.events.available, size(return.events.items[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= 0;daikon.inv.unary.scalar.LowerBound;(return.digitalId)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.issueNumber >= 0.0;daikon.inv.unary.scalar.LowerBoundFloat;(return.issueNumber)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.variantDescription one of { "GARNER VARIANT", "WHITE VARIANT" };daikon.inv.unary.string.OneOfString;(return.variantDescription)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount >= 0;daikon.inv.unary.scalar.LowerBound;(return.pageCount)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.textObjects != null;daikon.inv.unary.scalar.NonZero;(return.textObjects)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.textObjects[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.textObjects[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.urls != null;daikon.inv.unary.scalar.NonZero;(return.urls)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.urls[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.urls[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.series != null;daikon.inv.unary.scalar.NonZero;(return.series)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.variants != null;daikon.inv.unary.scalar.NonZero;(return.variants)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.variants[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.variants[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collections != null;daikon.inv.unary.scalar.NonZero;(return.collections)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collections[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.collections[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collectedIssues != null;daikon.inv.unary.scalar.NonZero;(return.collectedIssues)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.collectedIssues[] == [];daikon.inv.unary.sequence.OneOfSequence;(return.collectedIssues[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.dates != null;daikon.inv.unary.scalar.NonZero;(return.dates)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.dates[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.dates[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.prices != null;daikon.inv.unary.scalar.NonZero;(return.prices)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.prices[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.prices[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.thumbnail != null;daikon.inv.unary.scalar.NonZero;(return.thumbnail)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.thumbnail.extension == "jpg";daikon.inv.unary.string.OneOfString;(return.thumbnail.extension)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.images != null;daikon.inv.unary.scalar.NonZero;(return.images)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.images[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.images[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators != null;daikon.inv.unary.scalar.NonZero;(return.creators)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= 0;daikon.inv.unary.scalar.LowerBound;(return.creators.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.items != null;daikon.inv.unary.scalar.NonZero;(return.creators.items)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.items[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.creators.items[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters != null;daikon.inv.unary.scalar.NonZero;(return.characters)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= 1;daikon.inv.unary.scalar.LowerBound;(return.characters.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.items != null;daikon.inv.unary.scalar.NonZero;(return.characters.items)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.items[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.characters.items[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories != null;daikon.inv.unary.scalar.NonZero;(return.stories)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= 2;daikon.inv.unary.scalar.LowerBound;(return.stories.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.items != null;daikon.inv.unary.scalar.NonZero;(return.stories.items)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.items[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.stories.items[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events != null;daikon.inv.unary.scalar.NonZero;(return.events)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.items != null;daikon.inv.unary.scalar.NonZero;(return.events.items)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.items[] == [];daikon.inv.unary.sequence.OneOfSequence;(return.events.items[..])
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) one of { 0, 1, 2 };daikon.inv.unary.scalar.OneOfScalar;(size(return.textObjects[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[]) one of { 0, 1, 4 };daikon.inv.unary.scalar.OneOfScalar;(size(return.collections[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.dates[]) one of { 2, 3, 4 };daikon.inv.unary.scalar.OneOfScalar;(size(return.dates[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.prices[]) one of { 1, 2 };daikon.inv.unary.scalar.OneOfScalar;(size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId != return.digitalId;daikon.inv.binary.twoScalar.IntNonEqual;(input.comicId, return.digitalId)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.pageCount;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.pageCount)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.creators.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.creators.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.creators.returned;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.creators.returned)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.characters.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.characters.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.stories.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.stories.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > return.events.available;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.events.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.textObjects[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.textObjects[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.urls[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.urls[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.variants[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.variants[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.collections[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.dates[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.dates[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;input.comicId > size(return.images[]);daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, size(return.images[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != return.characters.available;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, return.characters.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != return.stories.available;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, return.stories.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, return.events.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.textObjects[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.textObjects[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.urls[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.urls[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.variants[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.variants[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.collections[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.dates[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.dates[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.dates[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.prices[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.prices[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId >= size(return.images[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.digitalId, size(return.images[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.creators.items[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.creators.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.digitalId != size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.digitalId, size(return.stories.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != return.characters.available;daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, return.characters.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != return.stories.available;daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, return.stories.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.pageCount, return.events.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != size(return.urls[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, size(return.urls[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount >= size(return.variants[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.pageCount, size(return.variants[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != size(return.dates[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, size(return.dates[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != size(return.dates[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != size(return.prices[]);daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount % size(return.prices[]) == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(return.pageCount, size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.pageCount != size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.pageCount, size(return.stories.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= return.creators.returned;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, return.creators.returned)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, return.events.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= size(return.textObjects[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, size(return.textObjects[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= size(return.variants[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, size(return.variants[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= size(return.collections[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, size(return.collections[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.available >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.available, size(return.prices[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned >= return.events.available;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.returned, return.events.available)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned >= size(return.textObjects[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.returned, size(return.textObjects[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned >= size(return.variants[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.returned, size(return.variants[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned >= size(return.collections[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.returned, size(return.collections[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.creators.returned >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.creators.returned, size(return.prices[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= size(return.textObjects[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, size(return.textObjects[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, size(return.collections[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.characters.available >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(return.characters.available, size(return.prices[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.textObjects[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.textObjects[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available != size(return.variants[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(return.stories.available, size(return.variants[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.collections[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.stories.available >= size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(return.stories.available, size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.textObjects[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.textObjects[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.urls[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.urls[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.variants[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.variants[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.collections[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.collections[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available < size(return.dates[])-1;daikon.inv.binary.twoScalar.IntLessThan;(return.events.available, size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.prices[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.images[]);daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.images[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available <= size(return.characters.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(return.events.available, size(return.characters.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;return.events.available < size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntLessThan;(return.events.available, size(return.stories.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) <= size(return.urls[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..]), size(return.urls[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) <= size(return.dates[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..]), size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) <= size(return.prices[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..]), size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[]) != size(return.creators.items[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(size(return.textObjects[..]), size(return.creators.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 <= size(return.urls[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..])-1, size(return.urls[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 >= size(return.collectedIssues[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.textObjects[..])-1, size(return.collectedIssues[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 <= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..])-1, size(return.prices[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 <= size(return.images[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..])-1, size(return.images[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.textObjects[])-1 <= size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.textObjects[..])-1, size(return.stories.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) != size(return.variants[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(size(return.urls[..]), size(return.variants[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) >= size(return.collections[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..]), size(return.collections[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) <= size(return.dates[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.urls[..]), size(return.dates[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) >= size(return.dates[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..]), size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) % size(return.prices[]) == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(size(return.urls[..]), size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) >= size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..]), size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[]) != size(return.images[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(size(return.urls[..]), size(return.images[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[])-1 >= size(return.collections[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..])-1, size(return.collections[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[])-1 <= size(return.dates[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.urls[..])-1, size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.urls[])-1 >= size(return.prices[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.urls[..])-1, size(return.prices[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.variants[]) != size(return.dates[]);daikon.inv.binary.twoScalar.IntNonEqual;(size(return.variants[..]), size(return.dates[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.variants[]) % size(return.stories.items[])-1 == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(size(return.variants[..]), size(return.stories.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.variants[])-1 >= size(return.collectedIssues[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.variants[..])-1, size(return.collectedIssues[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.variants[])-1 != size(return.dates[]);daikon.inv.binary.twoScalar.IntNonEqual;(size(return.variants[..])-1, size(return.dates[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.variants[])-1 != size(return.dates[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(size(return.variants[..])-1, size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[]) <= size(return.dates[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..]), size(return.dates[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[]) != size(return.dates[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(size(return.collections[..]), size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 >= size(return.collectedIssues[])-1;daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.collections[..])-1, size(return.collectedIssues[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 <= size(return.dates[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..])-1, size(return.dates[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 != size(return.prices[]);daikon.inv.binary.twoScalar.IntNonEqual;(size(return.collections[..])-1, size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 != size(return.images[]);daikon.inv.binary.twoScalar.IntNonEqual;(size(return.collections[..])-1, size(return.images[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 <= size(return.characters.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..])-1, size(return.characters.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collections[])-1 <= size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collections[..])-1, size(return.stories.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[])-1 <= size(return.images[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collectedIssues[..])-1, size(return.images[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.collectedIssues[])-1 <= size(return.creators.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.collectedIssues[..])-1, size(return.creators.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.dates[]) % size(return.prices[]) == 0;daikon.inv.binary.twoScalar.NumericInt$Divides;(size(return.dates[..]), size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.dates[]) != size(return.images[])-1;daikon.inv.binary.twoScalar.IntNonEqual;(size(return.dates[..]), size(return.images[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.dates[])-1 >= size(return.prices[]);daikon.inv.binary.twoScalar.IntGreaterEqual;(size(return.dates[..])-1, size(return.prices[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.prices[])-1 <= size(return.images[]);daikon.inv.binary.twoScalar.IntLessEqual;(size(return.prices[..])-1, size(return.images[..]))
main.v1publiccomics{comicId}.getComicIndividual&200&data&results(main.getComicIndividual&Input):::EXIT;size(return.prices[])-1 <= size(return.stories.items[])-1;daikon.inv.binary.twoScalar.IntLessEqual;(size(return.prices[..])-1, size(return.stories.items[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::ENTER;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.offset == size(return.data.results[])-1;daikon.inv.binary.twoScalar.IntEqual;(return.data.offset, size(return.data.results[..])-1)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == return.data.count;daikon.inv.binary.twoScalar.IntEqual;(return.data.total, return.data.count)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == size(return.data.results[]);daikon.inv.binary.twoScalar.IntEqual;(return.data.total, size(return.data.results[..]))
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[return.data.offset] == return.data.results[return.data.total-1];daikon.inv.binary.twoScalar.IntEqual;(return.data.results[return.data.offset], return.data.results[return.data.total-1])
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[return.data.offset] == return.data.results[return.data.count-1];daikon.inv.binary.twoScalar.IntEqual;(return.data.results[return.data.offset], return.data.results[return.data.count-1])
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input != null;daikon.inv.unary.scalar.NonZero;(input)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return != null;daikon.inv.unary.scalar.NonZero;(return)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.code == 200;daikon.inv.unary.scalar.OneOfScalar;(return.code)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.status == "Ok";daikon.inv.unary.string.OneOfString;(return.status)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.copyright == "\251 2022 MARVEL";daikon.inv.unary.string.OneOfString;(return.copyright)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.attributionText == "Data provided by Marvel. \251 2022 MARVEL";daikon.inv.unary.string.OneOfString;(return.attributionText)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.attributionHTML == "<a href=\"http://marvel.com\">Data provided by Marvel. \251 2022 MARVEL</a>";daikon.inv.unary.string.OneOfString;(return.attributionHTML)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data != null;daikon.inv.unary.scalar.NonZero;(return.data)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.limit == 20;daikon.inv.unary.scalar.OneOfScalar;(return.data.limit)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.total == 1;daikon.inv.unary.scalar.OneOfScalar;(return.data.total)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results != null;daikon.inv.unary.scalar.NonZero;(return.data.results)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[] elements != null;daikon.inv.unary.sequence.EltNonZero;(return.data.results[..])
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.code;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.code)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.data.limit;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.data.limit)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;input.comicId > return.data.total;daikon.inv.binary.twoScalar.IntGreaterThan;(input.comicId, return.data.total)
main.v1publiccomics{comicId}.getComicIndividual&200(main.getComicIndividual&Input):::EXIT;return.data.results[] elements == return.data.results[return.data.offset];daikon.inv.binary.sequenceScalar.SeqIntEqual;(return.data.results[..], return.data.results[return.data.offset])

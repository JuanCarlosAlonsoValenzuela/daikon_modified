{
    "arithmetic_comparisons": [
        "daikon.inv.unary.scalar.LowerBound",
        "daikon.inv.unary.scalar.LowerBoundFloat",
        "daikon.inv.unary.scalar.UpperBound",
        "daikon.inv.unary.scalar.UpperBoundFloat",
        "daikon.inv.unary.scalar.RangeInt$PowerOfTwo",
        "daikon.inv.unary.sequence.EltRangeInt$PowerOfTwo",
        "daikon.inv.unary.sequence.EltLowerBound",
        "daikon.inv.unary.sequence.EltUpperBound",
        "daikon.inv.unary.sequence.EltLowerBoundFloat",
        "daikon.inv.unary.sequence.EltUpperBoundFloat",
        "daikon.inv.binary.twoScalar.IntEqual",
        "daikon.inv.binary.twoScalar.IntLessThan",
        "daikon.inv.binary.twoScalar.IntGreaterThan",
        "daikon.inv.binary.twoScalar.IntLessEqual",
        "daikon.inv.binary.twoScalar.IntGreaterEqual",
        "daikon.inv.binary.twoScalar.FloatEqual",
        "daikon.inv.binary.twoScalar.FloatLessThan",
        "daikon.inv.binary.twoScalar.FloatGreaterThan",
        "daikon.inv.binary.twoScalar.FloatLessEqual",
        "daikon.inv.binary.twoScalar.FloatGreaterEqual",
        "daikon.inv.binary.twoScalar.LinearBinary",
        "daikon.inv.binary.twoScalar.LinearBinaryFloat",
        "daikon.inv.binary.twoSequence.SeqSeqIntEqual",
        "daikon.inv.binary.twoSequence.SeqSeqIntLessThan",
        "daikon.inv.binary.twoSequence.SeqSeqIntGreaterThan",
        "daikon.inv.binary.twoSequence.SeqSeqIntLessEqual",
        "daikon.inv.binary.twoSequence.SeqSeqIntGreaterEqual",
        "daikon.inv.binary.twoSequence.SeqSeqFloatEqual",
        "daikon.inv.binary.twoSequence.SeqSeqFloatLessThan",
        "daikon.inv.binary.twoSequence.SeqSeqFloatGreaterThan",
        "daikon.inv.binary.twoSequence.SeqSeqFloatLessEqual",
        "daikon.inv.binary.twoSequence.SeqSeqFloatGreaterEqual",
        "daikon.inv.binary.twoSequence.PairwiseIntEqual",
        "daikon.inv.binary.twoSequence.PairwiseIntLessThan",
        "daikon.inv.binary.twoSequence.PairwiseIntGreaterThan",
        "daikon.inv.binary.twoSequence.PairwiseIntLessEqual",
        "daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual",
        "daikon.inv.binary.twoSequence.PairwiseFloatEqual",
        "daikon.inv.binary.twoSequence.PairwiseFloatLessThan",
        "daikon.inv.binary.twoSequence.PairwiseFloatGreaterThan",
        "daikon.inv.binary.twoSequence.PairwiseFloatLessEqual",
        "daikon.inv.binary.twoSequence.PairwiseFloatGreaterEqual",
        "daikon.inv.binary.twoSequence.PairwiseLinearBinary",
        "daikon.inv.binary.twoSequence.PairwiseLinearBinaryFloat",
        "daikon.inv.binary.sequenceScalar.SeqIntEqual",
        "daikon.inv.binary.sequenceScalar.SeqIntLessThan",
        "daikon.inv.binary.sequenceScalar.SeqIntGreaterThan",
        "daikon.inv.binary.sequenceScalar.SeqIntLessEqual",
        "daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual",
        "daikon.inv.binary.sequenceScalar.SeqFloatEqual",
        "daikon.inv.binary.sequenceScalar.SeqFloatLessThan",
        "daikon.inv.binary.sequenceScalar.SeqFloatGreaterThan",
        "daikon.inv.binary.sequenceScalar.SeqFloatLessEqual",
        "daikon.inv.binary.sequenceScalar.SeqFloatGreaterEqual",
        "daikon.inv.ternary.threeScalar.LinearTernary",
        "daikon.inv.ternary.threeScalar.LinearTernaryFloat",
        "daikon.inv.binary.twoScalar.IntNonEqual",
        "daikon.inv.binary.twoScalar.FloatNonEqual",
        "daikon.inv.binary.twoScalar.NumericInt$Divides",
        "daikon.inv.binary.twoScalar.NumericInt$Square",
        "daikon.inv.binary.twoScalar.NumericFloat$Divides",
        "daikon.inv.binary.twoScalar.NumericFloat$Square",
        "daikon.inv.binary.twoSequence.PairwiseNumericInt$Divides",
        "daikon.inv.binary.twoSequence.PairwiseNumericInt$Square",
        "daikon.inv.binary.twoSequence.PairwiseNumericFloat$Divides",
        "daikon.inv.binary.twoSequence.PairwiseNumericFloat$Square"  
    ],
    "string_comparisons": [
        "daikon.inv.binary.twoString.StringEqual",
        "daikon.inv.binary.twoString.StdString$SubString",
        "daikon.inv.binary.twoSequence.PairwiseStringEqual",
        "daikon.inv.binary.twoSequence.SeqSeqStringEqual"
    ], 
    "specific_formats": [
        "daikon.inv.unary.string.IsUrl",
        "daikon.inv.unary.string.FixedLengthString",
        "daikon.inv.unary.string.IsNumeric",
        "daikon.inv.unary.string.IsEmail",
        "daikon.inv.unary.string.dates.IsDateYYYYMMDD",
        "daikon.inv.unary.string.dates.IsDateDDMMYYYY",
        "daikon.inv.unary.string.dates.IsDateMMDDYYYY",
        "daikon.inv.unary.string.dates.IsHour",
        "daikon.inv.unary.string.dates.IsHourWithSeconds",
        "daikon.inv.unary.string.dates.IsHourAMPM",
        "daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm",
        "daikon.inv.unary.stringsequence.SequenceFixedLengthString",
        "daikon.inv.unary.stringsequence.SequenceStringElementsAreUrl",
        "daikon.inv.unary.stringsequence.SequenceStringElementsAreNumeric",
        "daikon.inv.unary.stringsequence.SequenceStringElementsAreEmail",
        "daikon.inv.unary.stringsequence.dates.SequenceStringElementsAreDateYYYYMMDD",
        "daikon.inv.unary.stringsequence.dates.SequenceStringElementsAreDateDDMMYYYY",
        "daikon.inv.unary.stringsequence.dates.SequenceStringElementsAreDateMMDDYYYY",
        "daikon.inv.unary.stringsequence.dates.SequenceStringElementsAreHour",
        "daikon.inv.unary.stringsequence.dates.SequenceStringElementsAreHourWithSeconds",
        "daikon.inv.unary.stringsequence.dates.SequenceStringElementsAreHourAMPM",
        "daikon.inv.unary.stringsequence.dates.SequenceStringElementsAreTimestampYYYYMMHHThhmmssmm"  
    ],
    "specific_values": [
        "daikon.inv.unary.scalar.OneOfScalar",
        "daikon.inv.unary.scalar.OneOfFloat",
        "daikon.inv.unary.string.OneOfString",
        "daikon.inv.unary.sequence.OneOfSequence",
        "daikon.inv.unary.sequence.OneOfFloatSequence",
        "daikon.inv.unary.stringsequence.OneOfStringSequence",
        "daikon.inv.unary.sequence.EltOneOf", 
        "daikon.inv.unary.sequence.EltOneOfFloat", 
        "daikon.inv.unary.stringsequence.EltOneOfString",
        "daikon.inv.unary.scalar.NonZero",
        "daikon.inv.unary.scalar.NonZeroFloat",
        "daikon.inv.unary.sequence.EltNonZero",
        "daikon.inv.unary.sequence.EltNonZeroFloat"
    ],
    "array_properties": [
        "daikon.inv.unary.sequence.EltwiseIntEqual",
        "daikon.inv.unary.sequence.EltwiseIntLessEqual",
        "daikon.inv.unary.sequence.EltwiseIntGreaterEqual",
        "daikon.inv.unary.sequence.EltwiseIntLessThan",
        "daikon.inv.unary.sequence.EltwiseIntGreaterThan",
        "daikon.inv.unary.sequence.EltwiseFloatEqual",
        "daikon.inv.unary.sequence.EltwiseFloatLessEqual",
        "daikon.inv.unary.sequence.EltwiseFloatGreaterEqual",
        "daikon.inv.unary.sequence.EltwiseFloatLessThan",
        "daikon.inv.unary.sequence.EltwiseFloatGreaterThan",
        "daikon.inv.binary.twoSequence.Reverse",
        "daikon.inv.binary.twoSequence.ReverseFloat",
        "daikon.inv.binary.twoSequence.SubSet",
        "daikon.inv.binary.twoSequence.SuperSet",
        "daikon.inv.binary.twoSequence.SubSetFloat",
        "daikon.inv.binary.twoSequence.SuperSetFloat",
        "daikon.inv.binary.twoSequence.SubSequence",
        "daikon.inv.binary.twoSequence.SubSequenceFloat",
        "daikon.inv.binary.twoSequence.SuperSequence",
        "daikon.inv.binary.twoSequence.SuperSequenceFloat",
        "daikon.inv.binary.sequenceScalar.Member",
        "daikon.inv.binary.sequenceScalar.MemberFloat",
        "daikon.inv.binary.sequenceString.MemberString"
    ]
}